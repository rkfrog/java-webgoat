name: java-webgoat-mvn-docker-ci

on:
  push:
    branches:
      - main
  pull_request:
    types: 
      - closed
    branches:
      - main
  workflow_dispatch:

jobs:
  java-mvn-docker-build:
    runs-on: ubuntu-20.04
    steps:
      - run: |
          echo "The job was triggered by a ${{ github.event_name }} event."
      - name: Check out repository code 🛎️
        uses: actions/checkout@v3
      - run: |
          echo "${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls -ltrh ${{ github.workspace }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: JFrog CLI setup 🐸
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: https://${{ secrets.JF_RK_SA_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_RK_TOKEN }}
      - name: Health check JFrog Artifactory instance 🐸
        run: |
          jf rt ping
          jf config s
      - name: Capture build version
        run: echo MVN_PACKAGE_BUILD_VERSION=$(cat pom.xml | grep SNAPSHOT | cut -c 12-30) >> $GITHUB_ENV
      - name: Set JF MVN Config
        run:  jf mvn-config --repo-deploy=frogs-maven-virtual -repo-resolve=frogs-maven-virtual
      - name: JFrog audit 🐸
        run: |
          jfrog audit
      - name: mvn install
        run: jf mvn clean install -f pom.xml
      - name: Gather build details 🐸
        run: |
          jf rt build-add-git
          jf rt build-collect-env
      - name: Login to JFrog Docker repo
        uses: docker/login-action@v2
        with:
          registry: https://${{ secrets.JF_RK_SA_URL }}
          username: ${{ secrets.JF_RK_USERNAME }}
          password: ${{ secrets.JF_RK_TOKEN }}
      - name: Docker Build 🐳🐸
        run: |
          jf docker image build --tag ${{ env.JF_URL }}/frogs-docker-dev-virtual/java-webgoat:${{ env.MVN_PACKAGE_BUILD_VERSION }} .
        env:
          JF_URL: ${{ secrets.JF_RK_SA_URL }}
      - name: docker image scan 🐳🐸
        run: |
          jf docker scan ${{ env.JF_URL }}/frogs-docker-dev-virtual/java-webgoat:${{ env.MVN_PACKAGE_BUILD_VERSION }}
      - name: Docker Push 🐳🐸
        run: |
          jf docker push ${{ env.JF_URL }}/frogs-docker-dev-virtual/java-webgoat:${{ env.MVN_PACKAGE_BUILD_VERSION }}
        env:
          JF_URL: ${{ secrets.JF_RK_SA_URL }}
      - name: JFrog build publish 🐸
        run: jf rt build-publish
      - name: JFrog build scan 🐸
        run: |
          sleep 30
          jf bs ${{ github.workflow }} ${{ github.run_number }} --vuln=true